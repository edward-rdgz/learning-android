com.android.vending.licensing.AESObfuscator -> com.android.vending.licensing.o:
    byte[] IV -> a
    javax.crypto.Cipher mEncryptor -> b
    javax.crypto.Cipher mDecryptor -> c
    java.lang.String obfuscate(java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String) -> b
com.android.vending.licensing.DeviceLimiter -> com.android.vending.licensing.h:
    com.android.vending.licensing.Policy$LicenseResponse isDeviceAllowed$414f77c5() -> a
com.android.vending.licensing.ILicenseResultListener -> com.android.vending.licensing.e:
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.android.vending.licensing.ILicenseResultListener$Stub -> com.android.vending.licensing.r:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.licensing.ILicenseResultListener$Stub$Proxy -> com.android.vending.licensing.c:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.android.vending.licensing.ILicensingService -> com.android.vending.licensing.ILicensingService:
    void checkLicense(long,java.lang.String,com.android.vending.licensing.ILicenseResultListener) -> a
com.android.vending.licensing.ILicensingService$Stub -> com.android.vending.licensing.b:
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.vending.licensing.ILicensingService$Stub$Proxy -> com.android.vending.licensing.i:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void checkLicense(long,java.lang.String,com.android.vending.licensing.ILicenseResultListener) -> a
com.android.vending.licensing.LicenseChecker -> com.android.vending.licensing.s:
    java.security.SecureRandom RANDOM -> a
    com.android.vending.licensing.ILicensingService mService -> b
    java.security.PublicKey mPublicKey -> c
    android.content.Context mContext -> d
    com.android.vending.licensing.Policy mPolicy -> e
    android.os.Handler mHandler -> f
    java.lang.String mPackageName -> g
    java.lang.String mVersionCode -> h
    java.util.Set mChecksInProgress -> i
    java.util.Queue mPendingChecks -> j
    java.security.PublicKey generatePublicKey(java.lang.String) -> a
    void checkAccess(com.android.vending.licensing.LicenseCheckerCallback) -> a
    void runChecks() -> b
    void finishCheck(com.android.vending.licensing.LicenseValidator) -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void handleServiceConnectionError(com.android.vending.licensing.LicenseValidator) -> b
    void cleanupService() -> c
    void onDestroy() -> a
    java.lang.String getVersionCode(android.content.Context,java.lang.String) -> a
    void access$0(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator) -> a
    void access$1(com.android.vending.licensing.LicenseChecker,com.android.vending.licensing.LicenseValidator) -> b
    android.os.Handler access$2(com.android.vending.licensing.LicenseChecker) -> a
    java.util.Set access$3(com.android.vending.licensing.LicenseChecker) -> b
    java.security.PublicKey access$4(com.android.vending.licensing.LicenseChecker) -> c
com.android.vending.licensing.LicenseChecker$ResultListener -> com.android.vending.licensing.f:
    com.android.vending.licensing.LicenseValidator mValidator -> b
    java.lang.Runnable mOnTimeout -> c
    com.android.vending.licensing.LicenseChecker this$0 -> a
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
    com.android.vending.licensing.LicenseValidator access$0(com.android.vending.licensing.LicenseChecker$ResultListener) -> a
    void access$1(com.android.vending.licensing.LicenseChecker$ResultListener) -> b
com.android.vending.licensing.LicenseChecker$ResultListener$1 -> com.android.vending.licensing.j:
    com.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    void run() -> run
com.android.vending.licensing.LicenseChecker$ResultListener$2 -> com.android.vending.licensing.k:
    com.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    int val$responseCode -> b
    java.lang.String val$signedData -> c
    java.lang.String val$signature -> d
    void run() -> run
com.android.vending.licensing.LicenseCheckerCallback -> com.android.vending.licensing.p:
    void allow() -> a
    void dontAllow() -> b
    void applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode) -> a
com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode -> com.android.vending.licensing.v:
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode INVALID_PACKAGE_NAME -> a
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode NON_MATCHING_UID -> b
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode NOT_MARKET_MANAGED -> c
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode CHECK_IN_PROGRESS -> f
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode INVALID_PUBLIC_KEY -> d
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode MISSING_PERMISSION -> e
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] ENUM$VALUES -> g
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode[] values() -> values
    com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode valueOf(java.lang.String) -> valueOf
com.android.vending.licensing.LicenseValidator -> com.android.vending.licensing.a:
    com.android.vending.licensing.Policy mPolicy -> a
    com.android.vending.licensing.LicenseCheckerCallback mCallback -> b
    int mNonce -> c
    java.lang.String mPackageName -> d
    java.lang.String mVersionCode -> e
    com.android.vending.licensing.DeviceLimiter mDeviceLimiter -> f
    com.android.vending.licensing.LicenseCheckerCallback getCallback() -> a
    int getNonce() -> b
    java.lang.String getPackageName() -> c
    void verify(java.security.PublicKey,int,java.lang.String,java.lang.String) -> a
    void handleResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData) -> a
    void handleApplicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode) -> a
    void handleInvalidResponse() -> d
com.android.vending.licensing.NullDeviceLimiter -> com.android.vending.licensing.m:
    com.android.vending.licensing.Policy$LicenseResponse isDeviceAllowed$414f77c5() -> a
com.android.vending.licensing.Obfuscator -> com.android.vending.licensing.g:
    java.lang.String obfuscate(java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String) -> b
com.android.vending.licensing.Policy -> com.android.vending.licensing.q:
    void processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData) -> a
    boolean allowAccess() -> a
com.android.vending.licensing.Policy$LicenseResponse -> com.android.vending.licensing.t:
    com.android.vending.licensing.Policy$LicenseResponse LICENSED -> a
    com.android.vending.licensing.Policy$LicenseResponse NOT_LICENSED -> b
    com.android.vending.licensing.Policy$LicenseResponse RETRY -> c
    com.android.vending.licensing.Policy$LicenseResponse[] ENUM$VALUES -> d
    com.android.vending.licensing.Policy$LicenseResponse[] values() -> values
    com.android.vending.licensing.Policy$LicenseResponse valueOf(java.lang.String) -> valueOf
com.android.vending.licensing.PreferenceObfuscator -> com.android.vending.licensing.d:
    android.content.SharedPreferences mPreferences -> a
    com.android.vending.licensing.Obfuscator mObfuscator -> b
    android.content.SharedPreferences$Editor mEditor -> c
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> b
    void commit() -> a
com.android.vending.licensing.ResponseData -> com.android.vending.licensing.u:
    int responseCode -> a
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String versionCode -> d
    java.lang.String userId -> e
    long timestamp -> f
    java.lang.String extra -> g
    java.lang.String toString() -> toString
com.android.vending.licensing.ServerManagedPolicy -> com.android.vending.licensing.l:
    long mValidityTimestamp -> a
    long mRetryUntil -> b
    long mMaxRetries -> c
    long mRetryCount -> d
    long mLastResponseTime -> e
    com.android.vending.licensing.Policy$LicenseResponse mLastResponse -> f
    com.android.vending.licensing.PreferenceObfuscator mPreferences -> g
    void processServerResponse(com.android.vending.licensing.Policy$LicenseResponse,com.android.vending.licensing.ResponseData) -> a
    void setRetryCount(long) -> a
    void setValidityTimestamp(java.lang.String) -> a
    void setRetryUntil(java.lang.String) -> b
    void setMaxRetries(java.lang.String) -> c
    boolean allowAccess() -> a
    java.util.Map decodeExtras(java.lang.String) -> d
com.android.vending.licensing.ValidationException -> com.android.vending.licensing.n:
com.android.vending.licensing.util.Base64 -> com.android.vending.licensing.a.b:
    byte[] ALPHABET -> a
    byte[] WEBSAFE_ALPHABET -> b
    byte[] DECODABET -> c
    byte[] WEBSAFE_DECODABET -> d
    boolean $assertionsDisabled -> e
    java.lang.String encode(byte[]) -> a
    int decode4to3$355785af(byte[],byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
com.android.vending.licensing.util.Base64DecoderException -> com.android.vending.licensing.a.a:
es.midominio.android.miaplicacion.MonActiviteDestinataire -> es.midominio.android.miaplicacion.MonActiviteDestinataire:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.MonActivitePrincipale -> es.midominio.android.miaplicacion.MonActivitePrincipale:
    java.lang.String[][] ACTIVITES_PAR_CHAPITRE -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void lanceActivite(int,int,int) -> a
    void access$0(es.midominio.android.miaplicacion.MonActivitePrincipale,int,int,int) -> a
es.midominio.android.miaplicacion.MonActivitePrincipale$1 -> es.midominio.android.miaplicacion.b:
    es.midominio.android.miaplicacion.MonActivitePrincipale this$0 -> a
    int val$nChap -> b
    int val$position -> c
    void onClick(android.content.DialogInterface,int) -> onClick
es.midominio.android.miaplicacion.SplashActivity -> es.midominio.android.miaplicacion.SplashActivity:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.SplashActivity$1 -> es.midominio.android.miaplicacion.a:
    es.midominio.android.miaplicacion.SplashActivity this$0 -> a
    void run() -> run
es.midominio.android.miaplicacion.ex01.AutresWidgetsActivite -> es.midominio.android.miaplicacion.ex01.AutresWidgetsActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex01.Button1Activite -> es.midominio.android.miaplicacion.ex01.Button1Activite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
es.midominio.android.miaplicacion.ex01.Button2Activite -> es.midominio.android.miaplicacion.ex01.Button2Activite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex01.Button2Activite$1 -> es.midominio.android.miaplicacion.ex01.a:
    es.midominio.android.miaplicacion.ex01.Button2Activite this$0 -> a
    android.widget.Button val$bouton -> b
    void onClick(android.view.View) -> onClick
es.midominio.android.miaplicacion.ex01.EditTextActivite -> es.midominio.android.miaplicacion.ex01.EditTextActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex01.MesuresEcranActivite -> es.midominio.android.miaplicacion.ex01.MesuresEcranActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex01.ModeDeclaratifActivite -> es.midominio.android.miaplicacion.ex01.ModeDeclaratifActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex01.ModeProgrammatiqueActivite -> es.midominio.android.miaplicacion.ex01.ModeProgrammatiqueActivite:
    android.widget.RelativeLayout mLayout -> a
    android.widget.TextView mTexte -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setValeursSelonOrientationEcran(int) -> a
es.midominio.android.miaplicacion.ex01.TextViewActivite -> es.midominio.android.miaplicacion.ex01.TextViewActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex02.CycleDeVieActivite -> es.midominio.android.miaplicacion.ex02.CycleDeVieActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
es.midominio.android.miaplicacion.ex02.IntentionExpliciteActivite -> es.midominio.android.miaplicacion.ex02.IntentionExpliciteActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
es.midominio.android.miaplicacion.ex02.IntentionImpliciteActivite -> es.midominio.android.miaplicacion.ex02.IntentionImpliciteActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonAction1(android.view.View) -> onClickButtonAction1
    void onClickButtonView(android.view.View) -> onClickButtonView
es.midominio.android.miaplicacion.ex02.IntentionImpliciteDestActivite -> es.midominio.android.miaplicacion.ex02.IntentionImpliciteDestActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex02.PaysageActivite -> es.midominio.android.miaplicacion.ex02.PaysageActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex02.PileAActivite -> es.midominio.android.miaplicacion.ex02.PileAActivite:
es.midominio.android.miaplicacion.ex02.PileBActivite -> es.midominio.android.miaplicacion.ex02.PileBActivite:
es.midominio.android.miaplicacion.ex02.PileParentActivite -> es.midominio.android.miaplicacion.ex02.PileParentActivite:
    java.lang.String CLE_PILE -> a
    java.lang.String mPile -> b
    android.widget.TextView mPileTV -> c
    android.widget.Button mDepilerABouton -> d
    android.widget.Button mDepilerBBouton -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonEmpilerA(android.view.View) -> onClickButtonEmpilerA
    void onClickButtonEmpilerB(android.view.View) -> onClickButtonEmpilerB
    void onClickButtonDepilerJusquaA(android.view.View) -> onClickButtonDepilerJusquaA
    void onClickButtonDepilerJusquaB(android.view.View) -> onClickButtonDepilerJusquaB
    void onClickButtonDepilerTout(android.view.View) -> onClickButtonDepilerTout
    void majBoutons() -> a
es.midominio.android.miaplicacion.ex02.PortraitActivite -> es.midominio.android.miaplicacion.ex02.PortraitActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex02.RestaurationActivite -> es.midominio.android.miaplicacion.ex02.RestaurationActivite:
    android.view.View mLayout -> a
    android.widget.CheckBox mSauvegardeCheckBox -> b
    int mCouleur -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
es.midominio.android.miaplicacion.ex02.ResultatActivite -> es.midominio.android.miaplicacion.ex02.ResultatActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
es.midominio.android.miaplicacion.ex02.ResultatDestActivite -> es.midominio.android.miaplicacion.ex02.ResultatDestActivite:
    java.lang.String CLE1 -> a
    java.lang.String CLE2 -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
es.midominio.android.miaplicacion.ex03.DialogueActivite -> es.midominio.android.miaplicacion.ex03.DialogueActivite:
    android.app.ProgressDialog mDialogueProgress -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonAlert(android.view.View) -> onClickButtonAlert
    void onClickButtonChoix(android.view.View) -> onClickButtonChoix
    void onClickButtonProgress(android.view.View) -> onClickButtonProgress
    void onClickButtonProgressInd(android.view.View) -> onClickButtonProgressInd
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
es.midominio.android.miaplicacion.ex03.DialogueActivite$1 -> es.midominio.android.miaplicacion.ex03.a:
    es.midominio.android.miaplicacion.ex03.DialogueActivite this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
es.midominio.android.miaplicacion.ex03.DialogueActivite$2 -> es.midominio.android.miaplicacion.ex03.b:
    es.midominio.android.miaplicacion.ex03.DialogueActivite this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
es.midominio.android.miaplicacion.ex03.DialogueActivite$3 -> es.midominio.android.miaplicacion.ex03.c:
    es.midominio.android.miaplicacion.ex03.DialogueActivite this$0 -> a
    java.lang.String[] val$choix -> b
    void onClick(android.content.DialogInterface,int) -> onClick
es.midominio.android.miaplicacion.ex03.MenuActivite -> es.midominio.android.miaplicacion.ex03.MenuActivite:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
es.midominio.android.miaplicacion.ex03.MenuContextuelActivite -> es.midominio.android.miaplicacion.ex03.MenuContextuelActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
es.midominio.android.miaplicacion.ex03.NotificationActivite -> es.midominio.android.miaplicacion.ex03.NotificationActivite:
    int mId -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
es.midominio.android.miaplicacion.ex03.StylesThemesActivite -> es.midominio.android.miaplicacion.ex03.StylesThemesActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex03.ToastActivite -> es.midominio.android.miaplicacion.ex03.ToastActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonShortDuration(android.view.View) -> onClickButtonShortDuration
    void onClickButtonLongDuration(android.view.View) -> onClickButtonLongDuration
es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite -> es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite:
    es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite$Element[] mElts -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite$Element[] access$0(es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite) -> a
es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite$AdaptateurPersonnalise -> es.midominio.android.miaplicacion.ex04.c:
    android.view.LayoutInflater mInflater -> a
    es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite$AdaptateurPersonnalise$ViewHolder -> es.midominio.android.miaplicacion.ex04.e:
    android.view.View vue -> a
    android.widget.ImageView img -> b
    android.widget.TextView titre -> c
    android.widget.RatingBar note -> d
    android.widget.TextView msg -> e
    es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite$AdaptateurPersonnalise this$1 -> f
es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite$Element -> es.midominio.android.miaplicacion.ex04.a:
    int idDrawable -> a
    java.lang.String titre -> b
    float note -> c
    java.lang.String msg -> d
    es.midominio.android.miaplicacion.ex04.ListePersonnaliseeActivite this$0 -> e
es.midominio.android.miaplicacion.ex04.ListeSimpleActivite -> es.midominio.android.miaplicacion.ex04.ListeSimpleActivite:
    java.lang.String[] mLibelles -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
es.midominio.android.miaplicacion.ex04.MonService -> es.midominio.android.miaplicacion.ex04.MonService:
    android.os.IBinder mBinder -> a
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void afficheNotification$13462e() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onRebind(android.content.Intent) -> onRebind
es.midominio.android.miaplicacion.ex04.MonService$MonServiceBinder -> es.midominio.android.miaplicacion.ex04.b:
    es.midominio.android.miaplicacion.ex04.MonService this$0 -> a
es.midominio.android.miaplicacion.ex04.RecepteurEvenements -> es.midominio.android.miaplicacion.ex04.RecepteurEvenements:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
es.midominio.android.miaplicacion.ex04.RecepteurEvenementsActivite -> es.midominio.android.miaplicacion.ex04.RecepteurEvenementsActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonEnvoiEvt(android.view.View) -> onClickButtonEnvoiEvt
es.midominio.android.miaplicacion.ex04.ServiceActivite -> es.midominio.android.miaplicacion.ex04.ServiceActivite:
    android.widget.Button mBoutonBindUnbind -> a
    android.widget.Button mBoutonAction -> b
    es.midominio.android.miaplicacion.ex04.MonService mService -> c
    android.content.ServiceConnection mConnexion -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonStartService(android.view.View) -> onClickButtonStartService
    void onClickButtonStopService(android.view.View) -> onClickButtonStopService
    void onClickButtonStopSelfService(android.view.View) -> onClickButtonStopSelfService
    void onClickButtonBindUnbindService(android.view.View) -> onClickButtonBindUnbindService
    void onClickButtonActionService(android.view.View) -> onClickButtonActionService
    void access$0(es.midominio.android.miaplicacion.ex04.ServiceActivite,es.midominio.android.miaplicacion.ex04.MonService) -> a
    android.widget.Button access$1(es.midominio.android.miaplicacion.ex04.ServiceActivite) -> a
    android.widget.Button access$2(es.midominio.android.miaplicacion.ex04.ServiceActivite) -> b
es.midominio.android.miaplicacion.ex04.ServiceActivite$1 -> es.midominio.android.miaplicacion.ex04.d:
    es.midominio.android.miaplicacion.ex04.ServiceActivite this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
es.midominio.android.miaplicacion.ex05.AgentDeSauvegardeActivite -> es.midominio.android.miaplicacion.ex05.AgentDeSauvegardeActivite:
    android.widget.RadioGroup mChoixRG -> a
    android.widget.EditText mTexteET -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonSauvegarde(android.view.View) -> onClickButtonSauvegarde
es.midominio.android.miaplicacion.ex05.BDDActivite -> es.midominio.android.miaplicacion.ex05.BDDActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void lectureBdd() -> a
es.midominio.android.miaplicacion.ex05.BDDActivite$BDDAssistant -> es.midominio.android.miaplicacion.ex05.a:
    es.midominio.android.miaplicacion.ex05.BDDActivite this$0 -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
es.midominio.android.miaplicacion.ex05.FichiersActivite -> es.midominio.android.miaplicacion.ex05.FichiersActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void lectureFichierStockageInterne() -> a
es.midominio.android.miaplicacion.ex05.FournisseurDeContenusActivite -> es.midominio.android.miaplicacion.ex05.FournisseurDeContenusActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex05.PreferencesActivite -> es.midominio.android.miaplicacion.ex05.PreferencesActivite:
    android.widget.RadioGroup mChoixRG -> a
    android.widget.EditText mTexteET -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonSauvegarde(android.view.View) -> onClickButtonSauvegarde
    void onClickButtonRestaure(android.view.View) -> onClickButtonRestaure
    void restaure() -> a
es.midominio.android.miaplicacion.ex06.ANRActivite -> es.midominio.android.miaplicacion.ex06.ANRActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
es.midominio.android.miaplicacion.ex06.AsyncTaskActivite -> es.midominio.android.miaplicacion.ex06.AsyncTaskActivite:
    es.midominio.android.miaplicacion.ex06.AsyncTaskActivite$NombresPremiersTache mTache -> a
    android.widget.ProgressBar mPb -> b
    android.widget.TextView mProgession -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.widget.ProgressBar access$0(es.midominio.android.miaplicacion.ex06.AsyncTaskActivite) -> a
    android.widget.TextView access$1(es.midominio.android.miaplicacion.ex06.AsyncTaskActivite) -> b
es.midominio.android.miaplicacion.ex06.AsyncTaskActivite$NombresPremiersTache -> es.midominio.android.miaplicacion.ex06.g:
    es.midominio.android.miaplicacion.ex06.AsyncTaskActivite this$0 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
es.midominio.android.miaplicacion.ex06.AsyncTaskActivite$NombresPremiersTache$1 -> es.midominio.android.miaplicacion.ex06.e:
    es.midominio.android.miaplicacion.ex06.AsyncTaskActivite$NombresPremiersTache this$1 -> a
    int val$nb -> b
    void run() -> run
es.midominio.android.miaplicacion.ex06.AutreProcessusActivite -> es.midominio.android.miaplicacion.ex06.AutreProcessusActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex06.HTTPActivite -> es.midominio.android.miaplicacion.ex06.HTTPActivite:
    java.lang.String URL -> a
    java.lang.String sAgentUtilisateur -> b
    es.midominio.android.miaplicacion.ex06.HTTPActivite$HTTPTache mTache -> c
    java.lang.String getAgentUtilisateur(android.content.Context) -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String access$0(android.content.Context) -> a
es.midominio.android.miaplicacion.ex06.HTTPActivite$HTTPTache -> es.midominio.android.miaplicacion.ex06.f:
    es.midominio.android.miaplicacion.ex06.HTTPActivite this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
es.midominio.android.miaplicacion.ex06.ProcessusActivite -> es.midominio.android.miaplicacion.ex06.ProcessusActivite:
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButton(android.view.View) -> onClickButton
es.midominio.android.miaplicacion.ex06.ThreadActivite -> es.midominio.android.miaplicacion.ex06.ThreadActivite:
    es.midominio.android.miaplicacion.ex06.ThreadActivite$NombresPremiersTache mTache -> b
    android.os.Handler mHandler -> c
    java.lang.Runnable mInfo -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    android.os.Handler access$0(es.midominio.android.miaplicacion.ex06.ThreadActivite) -> a
es.midominio.android.miaplicacion.ex06.ThreadActivite$1 -> es.midominio.android.miaplicacion.ex06.d:
    es.midominio.android.miaplicacion.ex06.ThreadActivite this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
es.midominio.android.miaplicacion.ex06.ThreadActivite$2 -> es.midominio.android.miaplicacion.ex06.c:
    es.midominio.android.miaplicacion.ex06.ThreadActivite this$0 -> a
    void run() -> run
es.midominio.android.miaplicacion.ex06.ThreadActivite$NombresPremiersTache -> es.midominio.android.miaplicacion.ex06.a:
    es.midominio.android.miaplicacion.ex06.ThreadActivite this$0 -> a
    void run() -> run
es.midominio.android.miaplicacion.ex06.ThreadActivite$NombresPremiersTache$1 -> es.midominio.android.miaplicacion.ex06.b:
    es.midominio.android.miaplicacion.ex06.ThreadActivite$NombresPremiersTache this$1 -> a
    java.lang.String val$message -> b
    void run() -> run
es.midominio.android.miaplicacion.ex07.JournalEvenementsActivite -> es.midominio.android.miaplicacion.ex07.JournalEvenementsActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex07.TestDuSingeActivite -> es.midominio.android.miaplicacion.ex07.TestDuSingeActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex07.TestsFonctionnelsActivite -> es.midominio.android.miaplicacion.ex07.TestsFonctionnelsActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex07.TestsUnitairesActivite -> es.midominio.android.miaplicacion.ex07.TestsUnitairesActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex08.PublicationActivite -> es.midominio.android.miaplicacion.ex08.PublicationActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex09.CarteActivite -> es.midominio.android.miaplicacion.ex09.CarteActivite:
    com.google.android.maps.MyLocationOverlay mLocUtilisateur -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    boolean isRouteDisplayed() -> isRouteDisplayed
    com.google.android.maps.MyLocationOverlay access$0(es.midominio.android.miaplicacion.ex09.CarteActivite) -> a
es.midominio.android.miaplicacion.ex09.CarteActivite$1 -> es.midominio.android.miaplicacion.ex09.a:
    es.midominio.android.miaplicacion.ex09.CarteActivite this$0 -> a
    com.google.android.maps.MapView val$carte -> b
    void run() -> run
es.midominio.android.miaplicacion.ex09.CarteActivite$1$1 -> es.midominio.android.miaplicacion.ex09.c:
    es.midominio.android.miaplicacion.ex09.CarteActivite$1 this$1 -> a
    void run() -> run
es.midominio.android.miaplicacion.ex09.GeolocActivite -> es.midominio.android.miaplicacion.ex09.GeolocActivite:
    android.location.LocationManager mLocManageur -> a
    android.widget.ToggleButton mBoutonMajRegulieres -> b
    android.widget.EditText mInfos -> c
    android.location.Criteria mCriteres -> d
    android.location.LocationListener mLocListener -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onClickButtonCache(android.view.View) -> onClickButtonCache
    void onClickButtonMajRegulieres(android.view.View) -> onClickButtonMajRegulieres
    void onResume() -> onResume
    void onPause() -> onPause
    void afficheLocalisation(int,android.location.Location) -> a
    void affiche(java.lang.String) -> a
    void access$0$2954995c(es.midominio.android.miaplicacion.ex09.GeolocActivite,android.location.Location) -> a
    void access$1(es.midominio.android.miaplicacion.ex09.GeolocActivite,java.lang.String) -> a
es.midominio.android.miaplicacion.ex09.GeolocActivite$1 -> es.midominio.android.miaplicacion.ex09.b:
    es.midominio.android.miaplicacion.ex09.GeolocActivite this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
es.midominio.android.miaplicacion.ex10.AppWidgetActivite -> es.midominio.android.miaplicacion.ex10.AppWidgetActivite:
    void onCreate(android.os.Bundle) -> onCreate
es.midominio.android.miaplicacion.ex10.ConfigurationAppWidgetActivite -> es.midominio.android.miaplicacion.ex10.ConfigurationAppWidgetActivite:
    int mAppWidgetId -> a
    void onCreate(android.os.Bundle) -> onCreate
    void validation(android.view.View) -> validation
es.midominio.android.miaplicacion.ex10.LicenceActivite -> es.midominio.android.miaplicacion.ex10.LicenceActivite:
    byte[] SALT -> a
    android.widget.TextView mStatutTextView -> b
    android.widget.Button mBouton -> c
    es.midominio.android.miaplicacion.ex10.LicenceActivite$ResultatsLicence mLicenceResultats -> d
    com.android.vending.licensing.LicenseChecker mLicVerificateur -> e
    android.os.Handler mHandler -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onButtonVerification(android.view.View) -> onButtonVerification
    void onDestroy() -> onDestroy
    void access$0(es.midominio.android.miaplicacion.ex10.LicenceActivite,java.lang.String) -> a
    android.widget.TextView access$1(es.midominio.android.miaplicacion.ex10.LicenceActivite) -> a
    android.widget.Button access$2(es.midominio.android.miaplicacion.ex10.LicenceActivite) -> b
es.midominio.android.miaplicacion.ex10.LicenceActivite$1 -> es.midominio.android.miaplicacion.ex10.a:
    es.midominio.android.miaplicacion.ex10.LicenceActivite this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
es.midominio.android.miaplicacion.ex10.LicenceActivite$2 -> es.midominio.android.miaplicacion.ex10.b:
    es.midominio.android.miaplicacion.ex10.LicenceActivite this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
es.midominio.android.miaplicacion.ex10.LicenceActivite$3 -> es.midominio.android.miaplicacion.ex10.c:
    es.midominio.android.miaplicacion.ex10.LicenceActivite this$0 -> a
    java.lang.String val$message -> b
    void run() -> run
es.midominio.android.miaplicacion.ex10.LicenceActivite$ResultatsLicence -> es.midominio.android.miaplicacion.ex10.d:
    es.midominio.android.miaplicacion.ex10.LicenceActivite this$0 -> a
    void allow() -> a
    void applicationError(com.android.vending.licensing.LicenseCheckerCallback$ApplicationErrorCode) -> a
    void dontAllow() -> b
es.midominio.android.miaplicacion.ex10.MonAppWidget -> es.midominio.android.miaplicacion.ex10.MonAppWidget:
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onDeleted(android.content.Context,int[]) -> onDeleted
